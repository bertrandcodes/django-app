[{"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/reportWebVitals.js":"1","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/App.js":"2","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Navbar.js":"3","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Dashboard.js":"4","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Status.js":"5","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/index.js":"6","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Customer.js":"7","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Products.js":"8","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/OrderForm.js":"9","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/CustomerModal.js":"10","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/UpdateOrder.js":"11","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/UpdateCustomer.js":"12","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Footer.js":"13","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/ProductForm.js":"14"},{"size":362,"mtime":1606283079518,"results":"15","hashOfConfig":"16"},{"size":912,"mtime":1606451371183,"results":"17","hashOfConfig":"16"},{"size":1424,"mtime":1606337946106,"results":"18","hashOfConfig":"16"},{"size":5382,"mtime":1606446942693,"results":"19","hashOfConfig":"16"},{"size":2054,"mtime":1606433468605,"results":"20","hashOfConfig":"16"},{"size":500,"mtime":1606283079517,"results":"21","hashOfConfig":"16"},{"size":4692,"mtime":1606443113151,"results":"22","hashOfConfig":"16"},{"size":2671,"mtime":1606461428400,"results":"23","hashOfConfig":"16"},{"size":3565,"mtime":1606447323964,"results":"24","hashOfConfig":"16"},{"size":1978,"mtime":1606447102626,"results":"25","hashOfConfig":"16"},{"size":3231,"mtime":1606442602803,"results":"26","hashOfConfig":"16"},{"size":2329,"mtime":1606444604743,"results":"27","hashOfConfig":"16"},{"size":223,"mtime":1606445464461,"results":"28","hashOfConfig":"16"},{"size":3299,"mtime":1606453755605,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19ehsz4",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/reportWebVitals.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/App.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Navbar.js",["62","63"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Dashboard.js",["64","65"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Status.js",["66","67"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/index.js",[],["68","69"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Customer.js",["70","71","72","73"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Products.js",["74","75"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/OrderForm.js",["76"],"import { Fragment, useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction OrderForm(props) {\n    const [customer, setCustomer] = useState('')\n    const [product, setProduct] = useState('')\n    const [status, setStatus] = useState('')\n\n    function submitOrder(e) {\n        e.preventDefault()\n        axios.post('http://127.0.0.1:8000/order-create/', {\n            customer,\n            product,\n            status\n        })\n            .then(res => {\n                console.log(res);\n                setTimeout(() => { window.location.replace('/'); }, 1500)\n                toast.success(\"Order has been placed! üéâ\")\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <Fragment>\n            <div class=\"order-row\">\n                <div >\n                    <div class=\"card card-body\">\n                        <h1>üéÅ Make someone's day.</h1>\n                        <Form>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Customer:</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => setCustomer(e.target.value)}>\n                                    <option selected value> -- select an option -- </option>\n                                    {props.location.state.customers.map(name => (\n                                        <option>{name.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Product:</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => setProduct(e.target.value)}>\n                                    <option selected value> -- select an option -- </option>\n                                    {props.location.state.products.map(product => (\n                                        <option>{product.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Status:</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => setStatus(e.target.value)}>\n                                    <option selected value> -- select an option -- </option>\n                                    <option>Pending</option>\n                                    <option>Out for delivery</option>\n                                    <option>Delivered</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Button className=\"button\" onClick={(e) => { submitOrder(e) }} variant=\"primary\" type=\"submit\">\n                                Order\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n            <ToastContainer\n                position=\"bottom-center\"\n                autoClose={1500}\n                hideProgressBar={false}\n                limit={1} />\n        </Fragment>\n    );\n}\n\nexport default OrderForm;\n","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/CustomerModal.js",["77"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/UpdateOrder.js",["78"],"import { useEffect, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\n\nfunction UpdateOrder(props) {\n    // const [customer, setCustomer] = useState('')\n    // const [product, setProduct] = useState('')\n    const [status, setStatus] = useState('')\n\n    function updateOrder(e) {\n        e.preventDefault()\n        axios.put(`http://127.0.0.1:8000/order-update/${props.id}/`, {\n            // customer,\n            // product,\n            status\n        })\n            .then(res => {\n                console.log(res)\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <Modal\n            {...props}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Update Your Order\n          </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    {/* <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Customer:</Form.Label>\n                        <Form.Control as=\"select\" onChange={(e) => setCustomer(e.target.value)}>\n                            <option selected value> -- select an option -- </option>\n                            {props.customers.map(name => (\n                                <option>{name.name}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Product:</Form.Label>\n                        <Form.Control as=\"select\" onChange={(e) => setProduct(e.target.value)}>\n                            <option selected value> -- select an option -- </option>\n                            {props.products.map(product => (\n                                <option>{product.name}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group> */}\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Status:</Form.Label>\n                        <Form.Control as=\"select\" onChange={(e) => setStatus(e.target.value)}>\n                            <option selected value> -- select an option -- </option>\n                            <option>Pending</option>\n                            <option>Out for delivery</option>\n                            <option>Delivered</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button className=\"button\" onClick={(e) => { updateOrder(e) }} variant=\"primary\" type=\"submit\">\n                    Update\n                            </Button>\n                <Button onClick={props.onHide} variant=\"danger\">Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default UpdateOrder;\n","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/UpdateCustomer.js",["79"],"import { useEffect, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\n\nfunction UpdateCustomer(props) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n\n    function createCustomer(e) {\n        e.preventDefault()\n\n        axios.put(`http://127.0.0.1:8000/customer-update/${props.id}/`, {\n            name,\n            email,\n            phone\n        })\n            .then(res => {\n                console.log(res)\n                window.location.reload()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    return (\n        <Modal\n            {...props}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Update Customer Info\n          </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group controlId=\"formGroupName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control placeholder=\"First Name\" onChange={(e) => setName(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupCell\">\n                        <Form.Label>Number</Form.Label>\n                        <Form.Control placeholder=\"What's yo #?\" onChange={(e) => setPhone(e.target.value)} />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button className=\"button\" onClick={(e) => { createCustomer(e) }} variant=\"primary\" type=\"submit\">\n                    Update\n                </Button>\n                <Button onClick={props.onHide} variant=\"danger\">Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default UpdateCustomer;\n","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Footer.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/ProductForm.js",["80"],{"ruleId":"81","severity":1,"message":"82","line":22,"column":29,"nodeType":"83","endLine":22,"endColumn":50},{"ruleId":"81","severity":1,"message":"82","line":27,"column":29,"nodeType":"83","endLine":27,"endColumn":50},{"ruleId":"81","severity":1,"message":"82","line":118,"column":41,"nodeType":"83","endLine":118,"endColumn":108},{"ruleId":"81","severity":1,"message":"82","line":119,"column":41,"nodeType":"83","endLine":119,"endColumn":113},{"ruleId":"84","severity":1,"message":"85","line":29,"column":99,"nodeType":"86","messageId":"87","endLine":29,"endColumn":101},{"ruleId":"84","severity":1,"message":"85","line":42,"column":99,"nodeType":"86","messageId":"87","endLine":42,"endColumn":101},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"85","line":21,"column":76,"nodeType":"86","messageId":"87","endLine":21,"endColumn":78},{"ruleId":"92","severity":1,"message":"93","line":27,"column":8,"nodeType":"94","endLine":27,"endColumn":10,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"96","line":123,"column":41,"nodeType":"83","endLine":123,"endColumn":80},{"ruleId":"81","severity":1,"message":"82","line":125,"column":41,"nodeType":"83","endLine":125,"endColumn":113},{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":9},{"ruleId":"97","severity":1,"message":"101","line":11,"column":11,"nodeType":"99","messageId":"100","endLine":11,"endColumn":16},{"ruleId":"97","severity":1,"message":"102","line":1,"column":20,"nodeType":"99","messageId":"100","endLine":1,"endColumn":29},{"ruleId":"97","severity":1,"message":"102","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":1,"column":20,"nodeType":"99","messageId":"100","endLine":1,"endColumn":29},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["105"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'array' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [props.match.params.id]",{"range":"108","text":"109"},[888,890],"[props.match.params.id]"]