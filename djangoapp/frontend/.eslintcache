[{"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/reportWebVitals.js":"1","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/App.js":"2","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Navbar.js":"3","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Dashboard.js":"4","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Status.js":"5","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/index.js":"6","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Customer.js":"7","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Products.js":"8","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/OrderForm.js":"9"},{"size":362,"mtime":1606283079518,"results":"10","hashOfConfig":"11"},{"size":739,"mtime":1606367854623,"results":"12","hashOfConfig":"11"},{"size":1424,"mtime":1606337946106,"results":"13","hashOfConfig":"11"},{"size":4052,"mtime":1606386548155,"results":"14","hashOfConfig":"11"},{"size":1894,"mtime":1606285158483,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":1606283079517,"results":"16","hashOfConfig":"11"},{"size":3614,"mtime":1606377140535,"results":"17","hashOfConfig":"11"},{"size":1454,"mtime":1606345318575,"results":"18","hashOfConfig":"11"},{"size":3101,"mtime":1606428905201,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19ehsz4",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/reportWebVitals.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/App.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Navbar.js",["41","42"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Dashboard.js",["43","44"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Status.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/index.js",[],["45","46"],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Customer.js",["47","48","49","50","51","52"],"import { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Customer(props) {\n    const [customer, setCustomer] = useState([])\n    const [orders, setOrders] = useState([])\n\n\n    useEffect(() => {\n        axios.get(`http://127.0.0.1:8000/customer-detail/${props.match.params.id}/`)\n            .then(res => {\n                setCustomer(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        axios.get('http://127.0.0.1:8000/order-list')\n            .then(res => {\n                let orderList = res.data.filter(order => order.customer.id == props.match.params.id)\n                setOrders(orderList)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    return (\n        <Fragment>\n            <br />\n\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <div class=\"card card-body\">\n                        <h5>Customer:</h5>\n                        <hr />\n                        <a class=\"btn btn-outline-info  btn-sm btn-block\" href=\"\">Update Customer</a>\n                        <a class=\"btn btn-outline-danger  btn-sm btn-block\" href=\"\">Delete Customer</a>\n                    </div>\n                </div>\n\n                <div class=\"col-md\">\n                    <div class=\"card card-body\">\n                        <h5>Contact Information</h5>\n                        <hr />\n                        <p>Email: {customer.email}</p>\n                        <p>Phone: {customer.phone}</p>\n                    </div>\n                </div>\n\n                <div class=\"col-md\">\n                    <div class=\"card card-body\">\n                        <h5>Total Orders</h5>\n                        <hr />\n                        <h1 className=\"h1-style\">{orders.length}</h1>\n                    </div>\n                </div>\n            </div>\n\n\n            <br />\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"card card-body\">\n                        <form method=\"get\">\n\n                            <button class=\"btn btn-primary\" type=\"submit\">Search</button>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n            <br />\n\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <div class=\"card card-body\">\n                        <table class=\"table table-sm\">\n                            <tr>\n                                <th>Product</th>\n                                <th>Category</th>\n                                <th>Date Ordered</th>\n                                <th>Status</th>\n                                <th>Update</th>\n                                <th>Remove</th>\n                            </tr>\n\n                            {orders.map(order => (\n                                <tr>\n                                    <td>{order.product.name}</td>\n                                    <td>{order.product.category}</td>\n                                    <td>{order.date_created}</td>\n                                    <td>{order.status}</td>\n                                    <td><a class=\"btn btn-sm btn-info\" href=\"\">Update</a></td>\n\n                                    <td><a class=\"btn btn-sm btn-danger\">Delete</a></td>\n                                </tr>\n                            ))}\n\n\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Customer;\n","/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/Products.js",[],"/Users/bertrandshao/Desktop/Repositories/django-app/djangoapp/frontend/src/components/OrderForm.js",["53","54","55"],"import { Fragment, useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nfunction OrderForm(props) {\n    const [customer, setCustomer] = useState('')\n    const [product, setProduct] = useState('')\n    const [status, setStatus] = useState('')\n\n    function submitOrder(e) {\n        e.preventDefault()\n        axios.post('http://127.0.0.1:8000/order-create/', {\n            customer: 1,\n            product: 1,\n            status\n        })\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <Fragment>\n            <div class=\"order-row\">\n                <div >\n                    <div class=\"card card-body\">\n                        <Form>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Customer:</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => setCustomer(e.target.value)}>\n                                    <option selected value> -- select an option -- </option>\n                                    {props.location.state.customers.map(name => (\n                                        <option>{name.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Product:</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => setProduct(e.target.value)}>\n                                    <option selected value> -- select an option -- </option>\n                                    {props.location.state.products.map(product => (\n                                        <option>{product.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Status:</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => setStatus(e.target.value)}>\n                                    <option selected value> -- select an option -- </option>\n                                    <option>Pending</option>\n                                    <option>Out for delivery</option>\n                                    <option>Delivered</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Button className=\"button\" onClick={(e) => { submitOrder(e) }} variant=\"primary\" type=\"submit\">\n                                Order\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default OrderForm;\n",{"ruleId":"56","severity":1,"message":"57","line":22,"column":29,"nodeType":"58","endLine":22,"endColumn":50},{"ruleId":"56","severity":1,"message":"57","line":27,"column":29,"nodeType":"58","endLine":27,"endColumn":50},{"ruleId":"56","severity":1,"message":"59","line":101,"column":41,"nodeType":"58","endLine":101,"endColumn":80},{"ruleId":"56","severity":1,"message":"57","line":102,"column":41,"nodeType":"58","endLine":102,"endColumn":113},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":19,"column":76,"nodeType":"66","messageId":"67","endLine":19,"endColumn":78},{"ruleId":"68","severity":1,"message":"69","line":25,"column":8,"nodeType":"70","endLine":25,"endColumn":10,"suggestions":"71"},{"ruleId":"56","severity":1,"message":"59","line":36,"column":25,"nodeType":"58","endLine":36,"endColumn":83},{"ruleId":"56","severity":1,"message":"59","line":37,"column":25,"nodeType":"58","endLine":37,"endColumn":85},{"ruleId":"56","severity":1,"message":"59","line":93,"column":41,"nodeType":"58","endLine":93,"endColumn":80},{"ruleId":"56","severity":1,"message":"57","line":95,"column":41,"nodeType":"58","endLine":95,"endColumn":74},{"ruleId":"72","severity":1,"message":"73","line":1,"column":20,"nodeType":"74","messageId":"75","endLine":1,"endColumn":29},{"ruleId":"72","severity":1,"message":"76","line":7,"column":12,"nodeType":"74","messageId":"75","endLine":7,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":8,"column":12,"nodeType":"74","messageId":"75","endLine":8,"endColumn":19},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'customer' is assigned a value but never used.","'product' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [props.match.params.id]",{"range":"83","text":"84"},[786,788],"[props.match.params.id]"]